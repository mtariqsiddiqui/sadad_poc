// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'package:sadad_poc/application.dart' as prefix0;
import 'package:sadad_poc/src/common/None.dart' as prefix1;
import 'package:sadad_poc/src/features/accounts/presentation/query_account.dart'
    as prefix2;
import 'package:sadad_poc/src/features/accounts/presentation/rejected_account.dart'
    as prefix3;
import 'package:sadad_poc/src/features/bills/presentation/query_bill.dart'
    as prefix4;
import 'package:sadad_poc/src/features/bills/presentation/rejected_bill.dart'
    as prefix5;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: unused_import

import 'package:reflectable/mirrors.dart' as m;
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'None',
            r'.None',
            134217735,
            0,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {r'': (bool b) => ({key}) => b ? prefix1.None(key: key) : null},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        r.NonGenericClassMirrorImpl(
            r'QueryAccount',
            r'.QueryAccount',
            134217735,
            1,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) =>
                  ({key}) => b ? prefix2.QueryAccount(key: key) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        r.NonGenericClassMirrorImpl(
            r'RejectedAccount',
            r'.RejectedAccount',
            134217735,
            2,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) =>
                  ({key}) => b ? prefix3.RejectedAccount(key: key) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        r.NonGenericClassMirrorImpl(
            r'QueryBill',
            r'.QueryBill',
            134217735,
            3,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => ({key}) => b ? prefix4.QueryBill(key: key) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        r.NonGenericClassMirrorImpl(
            r'RejectedBill',
            r'.RejectedBill',
            134217735,
            4,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) =>
                  ({key}) => b ? prefix5.RejectedBill(key: key) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {})
      ],
      null,
      null,
      <Type>[
        prefix1.None,
        prefix2.QueryAccount,
        prefix3.RejectedAccount,
        prefix4.QueryBill,
        prefix5.RejectedBill
      ],
      5,
      {},
      {},
      null,
      [
        const [
          0,
          0,
          const [#key]
        ]
      ])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
